/*!
  \file
  \version $Id: TATRdatRaw.icc,v 1.0 2011/04/01 18:47:40 sarti Exp $
  \brief Implementation (inline) of TATRdatRaw
*/


//------------------------------------------+-----------------------------------
//! Returns Counts

inline Int_t TATRrawHit::Count() const
{
  return trg_count;
}

//------------------------------------------+-----------------------------------
//! Returns Pattern

inline Int_t TATRrawHit::Pattern() const
{
  return trg_pat;
}

//------------------------------------------+-----------------------------------
//! Returns time from TDC

inline Double_t TATRrawHit::TrigTime(int ch) const
{
  if(ch>=0 && ch<(int)trg_tim.size()) {
    return trg_tim.at(ch);
  } else {
    Error("Action()","TrigTime setting wrong channel :: %d %ld",ch,trg_tim.size());
    return -1000.;
  }
}
//------------------------------------------+-----------------------------------
//! Returns multiplicity time from TDC

inline Double_t TATRrawHit::TrigMult(int ch) const
{
  if(ch>=0 && ch<(int)trg_mul.size()) {
    return trg_mul.at(ch);
  } else {
    Error("Action()","TrigMult setting wrong channel :: %d",ch);
    return -1;
  }
}

//------------------------------------------+-----------------------------------
//! Returns charge from QDC

inline Int_t TATRrawHit::Status() const
{
  return vu_stat;
}

//------------------------------------------+-----------------------------------
//! Returns Scaler Counts at a given channel

inline Int_t TATRrawHit::ScaCount(int ch) const
{
  if(ch>=0 && ch<16) {
    return sca_cnt[ch];
  } else {
    Fatal("Action()","Channel outside range! %d",ch);
    return -1;
  }
}



//------------------------------------------+-----------------------------------
//! Returns Counts

inline void TATRrawHit::SetCount(int count)
{
  trg_count =  count;
}

//------------------------------------------+-----------------------------------
//! Returns Pattern

inline void TATRrawHit::SetPattern(int patt)
{
  trg_pat = patt;
}


//------------------------------------------+-----------------------------------
//! time from Vulom

inline Int_t TATRrawHit::VulomTime() const
{
  return trg_vul_time;   
} 

inline void TATRrawHit::SetVulomTime(int tim)
{
  trg_vul_time=tim;	
}


//------------------------------------------+-----------------------------------
//! Returns time from TDC

inline void TATRrawHit::SetTrigTime(int ch, double time)
{

  if(ch>=0 && ch<(int)trg_tim.size()) {
    trg_tim.at(ch) = time;
  } else {
    Error("Action()","Set TrigTime setting wrong channel :: %d %ld",ch,trg_tim.size());
    trg_tim.at(ch) = -10000;
  }

}
//------------------------------------------+-----------------------------------
//! Returns multiplicity time from TDC

inline void TATRrawHit::SetTrigMult(int ch, int mult)
{
  if(ch>=0 && ch<(int)trg_mul.size()) {
    trg_mul.at(ch) = mult;
  } else {
    Error("Action()","TrigMult setting wrong channel :: %d",ch);
    trg_mul.at(ch) = -1;
  }
}

//------------------------------------------+-----------------------------------
//! Returns charge from QDC

inline void TATRrawHit::SetStatus(int stat)
{
  vu_stat =  stat;
}

//------------------------------------------+-----------------------------------
//! Set the counts Scaler Counts

inline void TATRrawHit::SetScaCount(int ch, int count)
{
  if(ch>=0 && ch<16) {
    sca_cnt[ch] =  count;
  } else {
    Fatal("Action()","Trying to set a channel outside range!");
  }
}


//------------------------------------------+-----------------------------------
//! Access \a i 'th hit

inline TATRrawHit* TATRdatRaw::Hit(Int_t i)
{
  return (TATRrawHit*) ((*fListOfHits)[i]);;
}

//------------------------------------------+-----------------------------------
//! Read-only access \a i 'th hit

inline const TATRrawHit* TATRdatRaw::Hit(Int_t i) const
{
  return (const TATRrawHit*) ((*fListOfHits)[i]);;
}

